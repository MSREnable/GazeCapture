import matplotlib.pyplot as plt
import numpy as np
import pandas as pd

All_RMS_Errors = {
    'MIT-LRN': {
        # Original MIT paper model, LRN instead of CrossMapLRN2d
        # Batch 128 on Alienware 51m NVIDIA 2080Ti
        'RMS_Errors': [2.3286047396759257, 2.1853567796821314, 2.1260477360736307, 2.1231018788556404,
                       2.165244323131456, 2.1346357934652915, 2.0952607714737033, 2.1207367246393076,
                       2.1513301759577472, 2.145653521204925, 2.1244738083681005, 2.157344966617782, 2.200293857488523,
                       2.1848297350023445, 2.1600034351066686, 2.196173098076087, 2.212923449354037, 2.2122061388558323,
                       2.216721373463767, 2.228971885432312, 2.208697491583603, 2.2454612007218073, 2.2529483607894396,
                       2.2494198072173086, 2.2300056850340995, 2.2392063010035543, 2.2757812097237746,
                       2.2527829522964695, 2.262061535566544, 2.2626777626799512],
        'Best_RMS_Errors': [2.3286047396759257, 2.1853567796821314, 2.1260477360736307, 2.1231018788556404,
                            2.1231018788556404, 2.1231018788556404, 2.0952607714737033, 2.0952607714737033,
                            2.0952607714737033, 2.0952607714737033, 2.0952607714737033, 2.0952607714737033,
                            2.0952607714737033, 2.0952607714737033, 2.0952607714737033, 2.0952607714737033,
                            2.0952607714737033, 2.0952607714737033, 2.0952607714737033, 2.0952607714737033,
                            2.0952607714737033, 2.0952607714737033, 2.0952607714737033, 2.0952607714737033,
                            2.0952607714737033, 2.0952607714737033, 2.0952607714737033, 2.0952607714737033,
                            2.0952607714737033, 2.0952607714737033]
    },
    'BDCMR': {
        # BatchNorm->Dropout->Conv2d->MaxPool->ReLU, no LRN or CrossMapLRN2d
        # Batch 128 on Alienware 51m NVIDIA 2080Ti
        'RMS_Errors': [2.2792, 2.1564, 2.1008, 2.0834, 2.0686, 2.0394, 2.0582, 2.0767, 2.0929, 2.0364, 2.0401, 2.0394,
                       2.0723, 2.0292, 2.0341, 2.0799, 2.0749, 2.0886, 2.0446, 2.1027, 2.0727, 2.1012, 2.0383, 2.0473,
                       2.0619, 2.0223, 2.0581, 2.0354, 2.0375, 2.0400],
        'Best_RMS_Errors': [2.2792, 2.1564, 2.1008, 2.0834, 2.0686, 2.0394, 2.0394, 2.0394, 2.0394, 2.0364, 2.0364,
                            2.0364, 2.0364, 2.0292, 2.0292, 2.0292, 2.0292, 2.0292, 2.0292, 2.0292, 2.0292, 2.0292,
                            2.0292, 2.0292, 2.0292, 2.0223, 2.0223, 2.0223, 2.0223, 2.0223],
    },
    # '224-jitterall-nomean': {
    #     'RMS_Errors': [2.3187, 2.2637, 2.2018, 2.1459, 2.1140, 2.0455, 2.0689, 2.0829, 2.0368, 2.0665, 2.0654, 2.0710,
    #                    2.0413, 2.0709, 2.0352, 2.0208, 2.0746, 2.0568, 2.0309, 2.0578, 2.0200, 2.0097, 2.0214, 2.0078,
    #                    2.0808, 2.0371, 2.0536, 2.0175, 2.0212, 2.0055],
    #     'Best_RMS_Errors': [2.3187, 2.2637, 2.2018, 2.1459, 2.1140, 2.0455, 2.0455, 2.0455, 2.0368, 2.0368, 2.0368,
    #                         2.0368, 2.0368, 2.0368, 2.0352, 2.0208, 2.0208, 2.0208, 2.0208, 2.0208, 2.0200, 2.0097,
    #                         2.0097, 2.0078, 2.0078, 2.0078, 2.0078, 2.0078, 2.0078, 2.0055],
    # },
    # '227-jitterall-nomean': {
    #     'RMS_Errors': [2.3007, 2.1911, 2.1377, 2.0939, 2.1228, 2.0545, 2.0816, 2.0431, 2.0513, 2.0681, 2.0387, 2.0061,
    #                    2.0101, 2.0254, 2.0373, 2.0231, 2.0822, 2.0425, 2.0579, 2.0423, 2.0890, 2.0180, 2.0271, 2.0425,
    #                    2.0212, 2.0383, 2.0417, 2.0725, 2.0528, 2.0300],
    #     'Best_RMS_Errors': [2.3007, 2.1911, 2.1377, 2.0939, 2.0939, 2.0545, 2.0545, 2.0431, 2.0431, 2.0431, 2.0387,
    #                         2.0061, 2.0061, 2.0061, 2.0061, 2.0061, 2.0061, 2.0061, 2.0061, 2.0061, 2.0061, 2.0061,
    #                         2.0061, 2.0061, 2.0061, 2.0061, 2.0061, 2.0061, 2.0061, 2.0061],
    # },
    'BDCMR-jitter-nomean': {
        # BDCMR, don't do mean for face/eyes, add jitter and random crop from 240->224
        # Batch 128 on Alienware 51m NVIDIA 2080Ti
        'RMS_Errors': [2.293592200122107, 2.23778991227833, 2.111237920557162, 2.0503367604228098, 2.1053897357740574,
                      2.077477353582786, 2.0204562945901428, 2.038922714529698, 2.06019775089836, 2.0420013571074125,
                      2.015661977006031, 2.0518391786202055, 2.068389495652076, 2.015549033491421, 2.0373749134599883,
                      2.0211977435024138, 2.0409215894094954, 2.0152629176321333, 2.0091810416277416,
                      2.0336313383003652, 1.9962893532520183, 1.9812626102745092, 2.0461399667761673,
                      2.0024401214191716, 1.9876474390433951, 2.014105341076931, 1.97707222670457, 2.003801866882827,
                      2.008408210320848, 2.004988826483628],
        'Best_RMS_Errors': [2.293592200122107, 2.23778991227833, 2.111237920557162, 2.0503367604228098,
                            2.0503367604228098, 2.0503367604228098, 2.0204562945901428, 2.0204562945901428,
                            2.0204562945901428, 2.0204562945901428, 2.015661977006031, 2.015661977006031,
                            2.015661977006031, 2.015549033491421, 2.015549033491421, 2.015549033491421,
                            2.015549033491421, 2.0152629176321333, 2.0091810416277416, 2.0091810416277416,
                            1.9962893532520183, 1.9812626102745092, 1.9812626102745092, 1.9812626102745092,
                            1.9812626102745092, 1.9812626102745092, 1.97707222670457, 1.97707222670457,
                            1.97707222670457, 1.97707222670457]
    },
    'BDCMR-HSM': {
        # BDCMR-jitter-nomean, turn on Hard Sample Mining
        # Batch 128 on Alienware 51m NVIDIA 2080Ti
        'RMS_Errors': [2.331934588406017, 2.2223023436738085, 2.2591254915418286, 2.30623818617502, 2.221061948232388,
                       2.2014403343521356, 2.2300259151471566, 2.113216987454659, 2.1317593734538547,
                       2.1482830236803068, 2.1804695212768883, 2.1530267465331048, 2.1622830679854372,
                       2.1102463601977535, 2.143904024206237, 2.0917060714483102, 2.0678742538944697, 2.117999564102214,
                       2.1636283758108297, 2.1741851597242734, 2.11031271854983, 2.1802302933893674, 2.1296453013865837,
                       2.089823168367849, 2.0939350923757547, 2.115415565391956, 2.1142792543309925, 2.135180254886835,
                       2.14331327151675, 2.122247109544622],
        'Best_RMS_Errors': [2.331934588406017, 2.2223023436738085, 2.2223023436738085, 2.2223023436738085,
                            2.221061948232388, 2.2014403343521356, 2.2014403343521356, 2.113216987454659,
                            2.113216987454659, 2.113216987454659, 2.113216987454659, 2.113216987454659,
                            2.113216987454659, 2.1102463601977535, 2.1102463601977535, 2.0917060714483102,
                            2.0678742538944697, 2.0678742538944697, 2.0678742538944697, 2.0678742538944697,
                            2.0678742538944697, 2.0678742538944697, 2.0678742538944697, 2.0678742538944697,
                            2.0678742538944697, 2.0678742538944697, 2.0678742538944697, 2.0678742538944697,
                            2.0678742538944697, 2.0678742538944697]
    },
    'BDCMR-ADV': {
        # BDCMR-jitter-nomean, turn on adversarial attack - specifically Fast Gradient Sign Attack (FGSA)
        # Batch 128 on Alienware 51m NVIDIA 2080Ti
        'RMS_Errors': [3.118429561293037, 2.8755794966068535, 3.1696789808215593, 2.8034747481586635,
                       2.8611501258896275, 2.50125332359668, 2.7022982818613777, 2.6738781996036267, 2.620483103003691,
                       2.590432259053613, 2.4208231254800823, 2.491220467573216, 2.568318672058321, 2.7575006834836957,
                       2.59086785483216, 2.57945299100459, 2.502373034663864, 2.4565531836473147, 2.4146290859922757,
                       2.4658071307905103, 2.387331842237779, 2.3507533910375518, 2.4609118867257176,
                       2.3382935154574302, 2.4258736207329674, 2.424054445447582, 2.327015259735682, 2.5391822532430623,
                       2.3146083498931045, 2.3213220215356825],
        'Best_RMS_Errors': [3.118429561293037, 2.8755794966068535, 2.8755794966068535, 2.8034747481586635,
                            2.8034747481586635, 2.50125332359668, 2.50125332359668, 2.50125332359668, 2.50125332359668,
                            2.50125332359668, 2.4208231254800823, 2.4208231254800823, 2.4208231254800823,
                            2.4208231254800823, 2.4208231254800823, 2.4208231254800823, 2.4208231254800823,
                            2.4208231254800823, 2.4146290859922757, 2.4146290859922757, 2.387331842237779,
                            2.3507533910375518, 2.3507533910375518, 2.3382935154574302, 2.3382935154574302,
                            2.3382935154574302, 2.327015259735682, 2.327015259735682, 2.3146083498931045,
                            2.3146083498931045]
    },
}

# Make a data frame
df_rms = pd.DataFrame({'x': range(1, 31),
                       'MIT-LRN': np.array((All_RMS_Errors['MIT-LRN'])['RMS_Errors']),
                       'BDCMR': np.array((All_RMS_Errors['BDCMR'])['RMS_Errors']),
                       # '224-jitterall-nomean': np.array((All_RMS_Errors['224-jitterall-nomean'])['RMS_Errors']),
                       # '227-jitterall-nomean': np.array((All_RMS_Errors['227-jitterall-nomean'])['RMS_Errors']),
                       'BDCMR-jitter-nomean': np.array((All_RMS_Errors['BDCMR-jitter-nomean'])['RMS_Errors']),
                       'BDCMR-HSM': np.array((All_RMS_Errors['BDCMR-HSM'])['RMS_Errors']),
                       'BDCMR-ADV': np.array((All_RMS_Errors['BDCMR-ADV'])['RMS_Errors']),
                       })

# style
plt.style.use('seaborn-darkgrid')

# create a color palette
palette = plt.get_cmap('Set1')

# multiple line plot
num = 0
for column in df_rms.drop('x', axis=1):
    num += 1
    plt.plot(df_rms['x'], df_rms[column], marker='', color=palette(num), linewidth=1, alpha=0.9, label=column)

# Add legend
plt.legend(loc=2, ncol=2)

# Add titles
plt.title("RMS Errors by Epoch", loc='left', fontsize=12, fontweight=0, color='orange')
plt.xlabel("Epoch")
plt.ylabel("RMS Error")
plt.show()

# Make a data frame
df_best_rms = pd.DataFrame({'x': range(1, 31),
                            'MIT-LRN': np.array((All_RMS_Errors['MIT-LRN'])['Best_RMS_Errors']),
                            'BDCMR': np.array((All_RMS_Errors['BDCMR'])['Best_RMS_Errors']),
                            # '224-jitterall-nomean': np.array((All_RMS_Errors['224-jitterall-nomean'])['Best_RMS_Errors']),
                            # '227-jitterall-nomean': np.array((All_RMS_Errors['227-jitterall-nomean'])['Best_RMS_Errors']),
                            'BDCMR-jitter-nomean': np.array((All_RMS_Errors['BDCMR-jitter-nomean'])['Best_RMS_Errors']),
                            'BDCMR-HSM': np.array((All_RMS_Errors['BDCMR-HSM'])['Best_RMS_Errors']),
                            'BDCMR-ADV': np.array((All_RMS_Errors['BDCMR-ADV'])['Best_RMS_Errors']),
                            })

# style
plt.style.use('seaborn-darkgrid')

# create a color palette
palette = plt.get_cmap('Set1')

# multiple line plot
num = 0
for column in df_best_rms.drop('x', axis=1):
    num += 1
    plt.plot(df_best_rms['x'], df_best_rms[column], marker='', color=palette(num), linewidth=1, alpha=0.9, label=column)

# Add legend
plt.legend(loc=2, ncol=2)

# Add titles
plt.title("Best RMS Errors by Epoch", loc='left', fontsize=12, fontweight=0, color='orange')
plt.xlabel("Epoch")
plt.ylabel("RMS Error")
plt.show()
